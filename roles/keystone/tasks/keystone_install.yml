---

- name: Install keystone Identity service
  apt: name={{ item }} state=present
  with_items:
    - keystone

- name: Remove sqllite db
  file: path=/var/lib/keystone/keystone.db
        state=absent

- name: Debug vars
  debug: var=conf_file
- name: Make sure default section exists in conf files
  lineinfile: dest={{ item }}
              regexp="^(\[default\]|\[DEFAULT\])$"
              insertbefore=BOF
              line=[DEFAULT]
              backup=yes
              create=yes
  with_items:
    - "{{ conf_file }}"
  notify: restart keystone

- name: Configure db conn
  ini_file: dest={{ item[0] }}
            section=database
            option={{item[1].option}}
            value={{item[1].value}}
            backup=yes
  with_nested:
    - ["{{ conf_file }}"]
    - [
      {option: connection, value: "mysql://keystone:{{ keystone_dbpass }}@controller/keystone"},
      ]
  notify: restart keystone

- name: Configure keystone options
  ini_file: dest={{ item[0] }}
            section=DEFAULT
            option={{ item[1].option }}
            value={{ item[1].value }}
            backup=yes
  with_nested:
    - ["{{ conf_file }}"]
    - [
      {option: admin_token, value: "{{ keystone_admin_token }}"},
      {option: log_dir, value: /var/log/keystone},
      ]
  notify: restart keystone

# until a way to trigger the notify's after a task is done is found,
# this'll have to do - we need to restart before the next task starts
- name: Restart keystone
  shell: creates={{ keystone_restarted }}
         service {{ item }} restart
  with_items:
    - keystone
- name: Mark keystone restarted
  lineinfile: dest={{ keystone_restarted }}
              line=done
              state=present
              create=yes

